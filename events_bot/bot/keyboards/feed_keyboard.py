from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.types import InlineKeyboardMarkup


def get_feed_list_keyboard(
    posts, current_page: int, total_pages: int, start_index: int = 1
) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–ø–∏—Å–∫–∞ –ø–æ—Å—Ç–æ–≤ (–ø–æ–¥–±–æ—Ä–∫–∞)"""
    builder = InlineKeyboardBuilder()

    # –ö–Ω–æ–ø–∫–∏ —Å —Ü–∏—Ñ—Ä–∞–º–∏ ‚Äî –≤—Å–µ –≤ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ
    for idx, post in enumerate(posts, start=start_index):
        builder.button(
            text=f"{idx}",
            callback_data=f"feed_open_{post.id}_{current_page}_{total_pages}"
        )

    # –ù–∞–≤–∏–≥–∞—Ü–∏—è (–µ—Å–ª–∏ –µ—Å—Ç—å)
    if current_page > 0 or current_page < total_pages - 1:
        if current_page > 0:
            builder.button(
                text="‚Äπ –ù–∞–∑–∞–¥", callback_data=f"feed_prev_{current_page}_{total_pages}"
            )
        if current_page < total_pages - 1:
            builder.button(
                text="–í–ø–µ—Ä–µ–¥ ‚Ä∫", callback_data=f"feed_next_{current_page}_{total_pages}"
            )

    # –ö–Ω–æ–ø–∫–∞ "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é" ‚Äî –≤—Å–µ–≥–¥–∞ –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å—Ç—Ä–æ–∫–µ
    builder.button(text="üíå –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")

    # –†–∞—Å–ø–æ–ª–∞–≥–∞–µ–º:
    # 1. –í—Å–µ —Ü–∏—Ñ—Ä—ã –≤ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ
    # 2. –ù–∞–≤–∏–≥–∞—Ü–∏—è ‚Äî –≤ —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä–æ–∫–µ (–µ—Å–ª–∏ –µ—Å—Ç—å)
    # 3. –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚Äî –≤ –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å—Ç—Ä–æ–∫–µ
    if current_page > 0 or current_page < total_pages - 1:
        builder.adjust(len(posts), 2, 1)
    else:
        builder.adjust(len(posts), 1)

    return builder.as_markup()


def get_liked_list_keyboard(
    posts, current_page: int, total_pages: int, start_index: int = 1
) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–ø–∏—Å–∫–∞ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤"""
    builder = InlineKeyboardBuilder()

    # –ö–Ω–æ–ø–∫–∏ —Å —Ü–∏—Ñ—Ä–∞–º–∏
    for idx, post in enumerate(posts, start=start_index):
        builder.button(
            text=f"{idx}",
            callback_data=f"liked_open_{post.id}_{current_page}_{total_pages}"
        )

    # –ù–∞–≤–∏–≥–∞—Ü–∏—è
    if current_page > 0 or current_page < total_pages - 1:
        if current_page > 0:
            builder.button(
                text="‚Äπ –ù–∞–∑–∞–¥", callback_data=f"liked_prev_{current_page}_{total_pages}"
            )
        if current_page < total_pages - 1:
            builder.button(
                text="–í–ø–µ—Ä–µ–¥ ‚Ä∫", callback_data=f"liked_next_{current_page}_{total_pages}"
            )

    # –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚Äî –≤—Å–µ–≥–¥–∞ –≤–Ω–∏–∑—É
    builder.button(text="üíå –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")

    # –†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ: –∫–∞–∫ –≤ –ª–µ–Ω—Ç–µ
    if current_page > 0 or current_page < total_pages - 1:
        builder.adjust(len(posts), 2, 1)
    else:
        builder.adjust(len(posts), 1)

    return builder.as_markup()


def get_feed_post_keyboard(
    current_page: int,
    total_pages: int,
    post_id: int,
    is_liked: bool = False,
    likes_count: int = 0,
    url: str | None = None,
) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–æ—Å—Ç–∞ –≤ –ª–µ–Ω—Ç–µ"""
    builder = InlineKeyboardBuilder()
    heart_emoji = "–í –∏–∑–±—Ä–∞–Ω–Ω–æ–º ‚ù§Ô∏è" if is_liked else "–í –∏–∑–±—Ä–∞–Ω–Ω–æ–µ ü§ç"
    heart_text = f"{heart_emoji} {likes_count}" if likes_count > 0 else heart_emoji

    # –î–æ–±–∞–≤–ª—è–µ–º –≤ –Ω—É–∂–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
    builder.button(text=heart_text, callback_data=f"feed_heart_{post_id}_{current_page}_{total_pages}")
    
    if url:
        builder.button(text="üîó –ü–æ–¥—Ä–æ–±–Ω–µ–µ", url=url)
    
    builder.button(text="‚Äπ –ö —Å–ø–∏—Å–∫—É", callback_data=f"feed_back_{current_page}_{total_pages}")
    builder.button(text="üíå –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")

    # –†–∞—Å–ø–æ–ª–∞–≥–∞–µ–º: –º–∞–∫—Å–∏–º—É–º –ø–æ 2 –≤ —Ä—è–¥
    if url:
        builder.adjust(2, 2)  # [–ª–∞–π–∫][—Å—Å—ã–ª–∫–∞] [–Ω–∞–∑–∞–¥][–º–µ–Ω—é]
    else:
        builder.adjust(1, 2)  # [–ª–∞–π–∫] [–Ω–∞–∑–∞–¥][–º–µ–Ω—é]

    return builder.as_markup()


def get_liked_post_keyboard(
    current_page: int,
    total_pages: int,
    post_id: int,
    is_liked: bool = False,
    likes_count: int = 0,
) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–æ—Å—Ç–∞ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º"""
    builder = InlineKeyboardBuilder()
    heart_emoji = "–í –∏–∑–±—Ä–∞–Ω–Ω–æ–º ‚ù§Ô∏è" if is_liked else "–í –∏–∑–±—Ä–∞–Ω–Ω–æ–µ ü§ç"
    heart_text = f"{heart_emoji} {likes_count}" if likes_count > 0 else heart_emoji

    # –ü–æ—Ä—è–¥–æ–∫: –ª–∞–π–∫ ‚Üí –∫ —Å–ø–∏—Å–∫—É ‚Üí –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    builder.button(text=heart_text, callback_data=f"liked_heart_{post_id}_{current_page}_{total_pages}")
    builder.button(text="‚Äπ –ö —Å–ø–∏—Å–∫—É", callback_data=f"liked_back_{current_page}_{total_pages}")
    builder.button(text="üíå –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")

    # –†–∞—Å–ø–æ–ª–∞–≥–∞–µ–º: [–ª–∞–π–∫] [–Ω–∞–∑–∞–¥][–º–µ–Ω—é]
    builder.adjust(1, 2)

    return builder.as_markup()
